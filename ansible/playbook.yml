---
- hosts: vb

  vars:
    project_id: price_info
    server_name: price-info.l
    symfony_root_dir: /var/www/project
    symfony_web_dir: "{{ symfony_root_dir }}/public"
    symfony_var_dir: "{{ symfony_root_dir }}/var"
    symfony_console_path: "{{ symfony_root_dir }}/bin/console"

  tasks:
    - ping: ~

    - name: Update APT package manager repositories cache
      become: true
      apt:
        update_cache: yes

    - name: Upgrade installed packages
      become: true
      apt:
        upgrade: safe

    - name: Install cowsay - it's probably important
      become: true
      apt:
        name: cowsay

    - name: Install low-level utilities
      become: true
      apt:
        name: "{{ item }}"
      with_items:
        - zip
        - unzip

    - name: Install Git VCS
      become: true
      apt:
        name: git
        state: latest

    - name: Install Nginx web server
      become: true
      apt:
        name: nginx
        state: latest
      notify: Restart Nginx

    - name: Add Symfony config template to the Nginx available sites
      become: true
      template:
        src: templates/symfony.conf
        dest: "/etc/nginx/sites-available/{{ server_name }}.conf"
      notify: Restart Nginx

    - name: Enable Symfony config template from Nginx available sites
      become: true
      file:
        src: "/etc/nginx/sites-available/{{ server_name }}.conf"
        dest: "/etc/nginx/sites-enabled/{{ server_name }}.conf"
        state: link
      notify: Restart Nginx

    - name: Add enabled Nginx site to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        regexp: "{{ server_name }}"
        line: "127.0.0.1 {{ server_name }}"
      notify: Restart Nginx

    - name: Install MySQL DB server
      become: true
      apt:
        name: mysql-server
        state: latest

    - name: Add PHP 7 PPA repository
      become: true
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: Install PHP packages
      become: true
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - php7.1-cli
        - php7.1-curl
        - php7.1-fpm
        - php7.1-intl
        - php7.1-mysql
        - php7.1-xml
      notify: Restart PHP-FPM

    - name: Set date.timezone for CLI
      become: true
      lineinfile:
        dest: /etc/php/7.1/cli/php.ini
        regexp: "date.timezone ="
        line: "date.timezone = UTC"

    - name: Set date.timezone for FPM
      become: true
      lineinfile:
        dest: /etc/php/7.1/fpm/php.ini
        regexp: "date.timezone ="
        line: "date.timezone = UTC"
      notify: Restart PHP-FPM

    - name: Create project directory and set its permissions
      become: true
      file:
        path: "{{ symfony_root_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes
      tags:
        - deploy

    - name: Checkout Git repository
      git:
        repo: https://github.com/boonkuaeb/sf4-reactjs.git
        dest: "{{ symfony_root_dir }}"
        force: yes

    - name: Checkout Git repository
      git:
        repo: https://github.com/boonkuaeb/sf4-reactjs.git
        dest: "{{ symfony_root_dir }}"
        force: yes
      tags:
        - deploy

    - name: Download Composer
      script: scripts/install_composer.sh
      tags:
        - deploy

    - name: Move Composer globally
      become: true
      command: mv composer.phar /usr/local/bin/composer
      tags:
        - deploy

    - name: Set permissions on Composer
      become: true
      file:
        path: /usr/local/bin/composer
        mode: "a+x"
      tags:
        - deploy

    - name: Install Composer's dependencies
      composer:
        working_dir: "{{ symfony_root_dir }}"
        no_dev: no
      tags:
        - deploy

    - name: Create .Env file
      become: true
      command: 'cp {{ symfony_root_dir }}/.env.dist {{ symfony_root_dir }}/.env'
      tags:
        - deploy

    - name: Add database connection
      become: true
      lineinfile:
        dest: "{{ symfony_root_dir }}/.env"
        regexp: "DATABASE_URL=mysql://db_user:db_password@127.0.0.1:3306/db_name"
        line: "DATABASE_URL=mysql://root@127.0.0.1:3306/{{ project_id }}_db"
      tags:
        - deploy

    - name: Fix var directory permissions
      file:
        path: "{{ symfony_var_dir }}"
        state: directory
        mode: 0777
        recurse: yes
      changed_when: false
      tags:
        - permissions
        - deploy

    # Symfony console commands
    - name: Create DB if not exists
      register: db_create_result
      changed_when: "not db_create_result.stdout|search('already exists. Skipped')"
      command: '{{ symfony_console_path }} doctrine:database:create --if-not-exists'
      tags:
        - deploy

    - name: Execute migrations
      register: db_migrations_result
      changed_when: "not db_migrations_result.stdout|search('No migrations to execute')"
      command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'
      tags:
        - deploy

    - name: Load data fixtures
      changed_when: false
      command: '{{ symfony_console_path }} doctrine:fixtures:load --no-interaction'
      tags:
        - deploy




    - name: Add Node repository
      become: true
      script: scripts/install_node_repo.sh

    - name: Install Node
      become: true
      apt:
        name: nodejs
        state: latest

    - name: Install packages based on package.json.
      npm:
        path: "{{ symfony_root_dir }}"
      tags:
        - deploy

    - name: Build RectJS project file
      command:  npm --prefix {{ symfony_root_dir }} run build
      tags:
        - deploy

  handlers:
    - name: Restart Nginx
      become: true
      service:
        name: nginx
        state: restarted

    - name: Restart PHP-FPM
      become: true
      service:
        name: php7.1-fpm
        state: restarted