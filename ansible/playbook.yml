---
- hosts: vb

  vars:
    project_id: price_info
    symfony_root_dir: /var/www/project
    symfony_web_dir: "{{ symfony_root_dir }}/public"
    symfony_var_dir: "{{ symfony_root_dir }}/var"
    symfony_console_path: "{{ symfony_root_dir }}/bin/console"

  vars_prompt:
    - name: symfony_env
      prompt: "Enter the environment for your Symfony app (prod|dev|test)"
      default: prod
      private: no

  environment:
    SYMFONY_ENV: "{{ symfony_env|lower }}"

  pre_tasks:
    - name: Convert entered Symfony environment to lowercase
      set_fact:
        symfony_env: "{{ symfony_env|lower }}"
      tags:
        - always
    - name: Update APT package manager repositories cache
      become: true
      apt:
        update_cache: yes

    - name: Upgrade installed packages
      become: true
      apt:
        upgrade: safe

  roles:
    - nginx
    - role: DavidWittman.redis
      become: true

  tasks:
    - ping: ~

    - name: Install cowsay - it's probably important
      become: true
      apt:
        name: cowsay

    - name: Install low-level utilities
      become: true
      apt:
        name: "{{ item }}"
      with_items:
        - zip
        - unzip

    - name: Install Git VCS
      become: true
      apt:
        name: git
        state: latest

    - name: Install MySQL DB server
      become: true
      apt:
        name: mysql-server
        state: latest

    - name: Add PHP 7 PPA repository
      become: true
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: Install PHP packages
      become: true
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - php7.1-cli
        - php7.1-curl
        - php7.1-fpm
        - php7.1-intl
        - php7.1-mysql
        - php7.1-xml
      notify: Restart PHP-FPM

    - name: Set date.timezone for CLI
      become: true
      lineinfile:
        dest: /etc/php/7.1/cli/php.ini
        regexp: "date.timezone ="
        line: "date.timezone = UTC"

    - name: Set date.timezone for FPM
      become: true
      lineinfile:
        dest: /etc/php/7.1/fpm/php.ini
        regexp: "date.timezone ="
        line: "date.timezone = UTC"
      notify: Restart PHP-FPM

    - name: Create project directory and set its permissions
      become: true
      file:
        path: "{{ symfony_root_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes
      tags:
        - deploy

    - name: Checkout Git repository
      register: repo_code
      git:
        repo: https://github.com/boonkuaeb/sf4-reactjs.git
        dest: "{{ symfony_root_dir }}"
        force: yes
      tags:
        - deploy

    - name: Register code_changed variable
      set_fact:
        code_changed: repo_code.changed
      tags:
        - deploy

    - name: Check for Composer
      stat:
        path: /usr/local/bin/composer
      register: composer_stat
      tags:
        - deploy

    - name: Download Composer
      when: not composer_stat.stat.exists
      script: scripts/install_composer.sh
      tags:
        - deploy

    - name: Move Composer globally
      when: not composer_stat.stat.exists
      become: true
      command: mv composer.phar /usr/local/bin/composer
      tags:
        - deploy

    - name: Make sure composer is at its latest version
      composer:
        working_dir: "{{ symfony_root_dir }}"
        command: self-update
      register: composer_self_update
      when: not composer_stat.stat.exists
      changed_when: "not composer_self_update.stdout|search('You are already using composer version')"
      tags:
        - deploy

    - name: Set permissions on Composer
      become: true
      file:
        path: /usr/local/bin/composer
        mode: "a+x"
      tags:
        - deploy

    - name: Check for Node
      stat:
        path: /usr/bin/node
      register: node_stat
      tags:
        - deploy

    - name: Add Node repository
      when: not node_stat.stat.exists
      become: true
      script: scripts/install_node_repo.sh
      tags:
        - deploy

    - name: Install Node
      when: not node_stat.stat.exists
      become: true
      apt:
        name: nodejs
        state: latest
      tags:
        - deploy

    - name: Install packages based on package.json.
      when: code_changed
      npm:
        path: "{{ symfony_root_dir }}"
      tags:
        - deploy

    - include: ./includes/symfony-bootstrap.yml

  handlers:
    - name: Restart PHP-FPM
      become: true
      service:
        name: php7.1-fpm
        state: restarted